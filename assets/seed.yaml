apiVersion: k0s.k0sproject.io/v1beta1
kind: ClusterConfig
metadata:
  creationTimestamp: null
  name: $cluster_name
spec:
  api:
    address: $server_address
    k0sApiPort: 9443
    port: 6443
    sans:
    - $server_address
  controllerManager: {}
  extensions:
    helm:
      concurrencyLevel: 5
      repositories:
      # - name: hami-charts
      #   url: https://project-hami.github.io/HAMi/
      - name: nvidia
        url: https://helm.ngc.nvidia.com/nvidia
      - name: kalavai
        url: https://kalavai-net.github.io/helm-charts/
      charts:
        # - name: hami-vgpu
        #   namespace: kalavai
        #   chartname: hami-charts/hami
        #   values: |
        #     scheduler:
        #       kubeScheduler:
        #         imageTag: v1.28.8
        #     devicePlugin:
        #       runtimeClassName: "nvidia"
        #       deviceMemoryScaling: 1
        #       deviceSplitCount: 1
        - name: lws
          namespace: kalavai
          chartname: kalavai/lws
        - name: kalavai-watcher
          namespace: kalavai
          chartname: kalavai/kalavai-watcher
          values: |
            namespace: kalavai
            deployment:
              in_cluster: "True"
              use_auth_key: "True"
              auth_key: "$auth_key"
            service:
              nodePort: $watcher_port
        - name: nvidia-gpu-operator
          namespace: gpu-operator
          chartname: nvidia/gpu-operator
          values: |
            operator:
              defaultRuntime: containerd
            toolkit:
              env:
              - name: CONTAINERD_CONFIG
                value: /etc/k0s/containerd.d/nvidia.toml
              - name: CONTAINERD_SOCKET
                value: /run/k0s/containerd.sock
              - name: CONTAINERD_RUNTIME_CLASS
                value: nvidia
    storage:
      create_default_storage_class: false
      type: external_storage
  installConfig:
    users:
      etcdUser: etcd
      kineUser: kube-apiserver
      konnectivityUser: konnectivity-server
      kubeAPIserverUser: kube-apiserver
      kubeSchedulerUser: kube-scheduler
  konnectivity:
    adminPort: 8133
    agentPort: 8132
  network:
    calico:
      mode: vxlan
      wireguard: true
    clusterDomain: cluster.local
    dualStack: {}
    kubeProxy:
      iptables:
        minSyncPeriod: 0s
        syncPeriod: 0s
      ipvs:
        minSyncPeriod: 0s
        syncPeriod: 0s
        tcpFinTimeout: 0s
        tcpTimeout: 0s
        udpTimeout: 0s
      metricsBindAddress: 0.0.0.0:10249
      mode: iptables
    kuberouter:
      autoMTU: true
      hairpin: Enabled
      ipMasq: false
      metricsPort: 8080
      mtu: 0
      peerRouterASNs: ""
      peerRouterIPs: ""
    nodeLocalLoadBalancing:
      envoyProxy:
        apiServerBindPort: 7443
        konnectivityServerBindPort: 7132
      type: EnvoyProxy
    podCIDR: 10.244.0.0/16
    provider: kuberouter
    serviceCIDR: 10.96.0.0/12
  scheduler: {}
  storage:
    etcd:
      externalCluster: null
      peerAddress: $server_address
    type: etcd
  telemetry:
    enabled: true
